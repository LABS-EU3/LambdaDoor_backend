
      # Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/repo
    docker:
      # specify the version you desire here
      - image: circleci/node:10.16.0
        environment:
           PGHOST: localhost
           PGUSER: postgres
           NODE_ENV: test
           DIALECT: postgres
           DATABASE_URL: "postgres://postgres:postgres@localhost:5432/ldoor_test"
      
      - image: circleci/postgres:11
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: ldoor_test
          DIALECT: postgres
          POSTGRES_PASSWORD: postgres
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    

    steps:
      - checkout

    #   # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: 
          npm install

      - run:
          name: Waiting for PostgreSQL to start
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 2
            done
            echo Failed waiting for Postgres && exit 1
      
      # - run:
      #     name: INSTALL PG CLIENT
      #     command: sudo apt install -y postgresql-client || true
      - run: sudo apt-get update
      - run: sudo apt install -y postgresql-client || true
      - run: sudo npm install -g knex
      # - run: createdb population-m-s-test
      - run: 
          name: Set up DB
          command: |
            psql -h localhost -p 5432 -c 'drop database if exists ldoor_test;' -U postgres
            psql -h localhost -p 5432 -c 'create database ldoor_test;' -U postgres
            psql -h localhost -p 5432 -c "CREATE USER postgresql WITH PASSWORD 'postgres';" -U postgres
            knex migrate:rollback --env test
            knex migrate:latest --env test
            knex seed:run --env test
      # - run:
      #     name: "Run Jest and Collect Coverage Reports"
      #     command: jest --collectCoverage=true
      # - store_artifacts:
      #     path: coverage

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      # - run: npm run testcircleci
      - run: npm run ci:test

      

     