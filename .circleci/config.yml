version: 2
jobs:
  build:
    docker:
      - image: circleci/node:12.13.1
        environment:
          NODE_ENV: test
          DATABASE_URL: postgres://avvofddf:QBWAt6NYTl0sHk1O6D6PfZkKwwQTf0Cs@rajje.db.elephantsql.com:5432/avvofddf
          POSTGRES_USER: avvofddf
          POSTGRES_DB: avvofddf
          POSTGRES_PASSWORD: QBWAt6NYTl0sHk1O6D6PfZkKwwQTf0Cs
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: avvofddf
          POSTGRES_DB: avvofddf
          POSTGRES_PASSWORD: QBWAt6NYTl0sHk1O6D6PfZkKwwQTf0Cs
    working_directory: ~/repo
    steps:
      - checkout

    #   # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: sudo npm install -g knex
      - run: sudo apt-get update
      - run: 
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 10m
      - run: sudo apt-get install postgresql-client-9.6 -y
      - run: knex migrate:rollback --env test
      - run: knex migrate:latest --env test
      - run: knex seed:run --env test
      - run:
          name: Run tests
          command: |
            sleep 30
      # run tests
      - run: npm run ci:test

      

     